迭代器是一个更加抽象的概念，任何有next函数的类，通过python内置的iter()函数都可以返回一个迭代器，可用于循环中遍历取值。



生成器是一个特殊的迭代器，它使用yield关键字进行迭代。

GIL Global Interpreter Lock  全局解释器锁
就是在python虚拟机中同一时刻只能有一个线程运行（类似单CPU）

grep是一种文本搜索工具，允许对文本进行模式查找(regex)
find是一种在特定目录下搜索特定用户的文件

常用Linux命令
help cd grep find mkdir date


django如何请求跨域请求问题
1 启用Middlewares
2 post请求
3 验证码
4 在表单中添加{% csrf_token %}


MIDDLEWARES中间件的作用

全局上改变django的输入与输出。

scrapy分布式爬虫为什么选择Redis数据库
redis是基与内存的，读取速度快，且支持主从同步



数据库的优化
1 添加字段索引/优化索引,优化SQL语句
2 严格按照数据库设计规范
3 使用缓存，把经常需要用到的数据放进缓存中
3 采用基与闪存的SSD
4 采用表分区技术，提高磁盘的读写速度
5 采用主从分离，将数据库的读/写操作分离开来

3.数据库优化一般思路
	查询条件的关键字上     				 索引适合应对百万级别的数据量
	不要在查询=前面使用函数
	建立组合索引，可以持续提升sql运行效率
	
	分库分表分区
	针对某一张大表，可以根据查询条件分成多张表，比如时间，我们可以将半个月或者10天的数据放到一张表里(看具体数据量，个人认为3000W是个上限，最好控制到百万级别)，每过10天，我们就自动创建一张数据库表，然后将数据插入，如此，按照时间查询，就要先定位去那种表中去取数，这样，效率能够得到大幅度提升，当然，这么解决也有问题，比如跨表，需要union多张表，而且跨表没法支持索引
	
	 分区
	将相应规则的数据放在一起，唯一不同的是分区你只需要设定好分区规则，插入的数据会被自动插入到指定的区里

	数据库引擎
	 mysql比较常用的数据库引擎有两种，一种是innodb、一种是myisam 
	mysiam适用于一次插入 （只做查询时，用mysiam ）       修改表的存储引擎myisam<=>innodb   修改存储引擎：mysql> alter table tt7 engine=innodb（mysiam）;







































